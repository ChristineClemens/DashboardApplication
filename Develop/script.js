//Christine - Define API key.
var APIKey = "2015c5f25f689dcf6dedba026011e032";

// Christine - Use geolocation api to retrieve location using coordinates.
function getLocation() {
    navigator.geolocation.getCurrentPosition(function(position){
        var latitude = position.coords.latitude;
        console.log(latitude);
        var longitude = position.coords.longitude;
        console.log(longitude);
        var units;
        var todayURL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&appid=${APIKey}`;
        var forecastURL = `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&appid=${APIKey}`;

        fetchData(todayURL);
        fetchForecast(forecastURL);
    })
}
//Christine - Fetch URL generated by geolocation coordinates to access current weather.
function fetchData(URL) {
    fetch(URL, {
        method: "GET",
})
    .then(response => response.json())
    .then(data => displayData(data))
}
//Christine - Add current location and weather information to NavBar.
function displayData(data) {
    console.log(data);
    document.querySelector("#forecastBtn").innerHTML = `<img src='http://openweathermap.org/img/wn/${data.weather[0].icon}.png'> ${data.name} <br> ${data.main.temp}`;
}

//Christine - Add current time to NavBar that automatically updates every second.
let localTime = function() {
        document.querySelector("#timeStamp").innerHTML = `${moment().format('MMMM Do YYYY, h:mm a')}`;
}
setInterval(localTime, 1000);

//Christine - Fetch URL generated by geolocation coordinates to access 5-day weather forecast.
function fetchForecast(URL) {
    fetch(URL, {
    })
    .then(response => response.json())
    .then(data => displayForecast(data))
}
//Christine - Add 5-day forecast information to modal pop-up.
function displayForecast(data) {
    console.log(data);
    for (i = 1; i <= 5; i++) {
        document.querySelector("#forecast").innerHTML += 
        `<div id="forecastInput" style='text-align: right'>
            <img src='http://openweathermap.org/img/wn/${data.list[i].weather[0].icon}.png'>
            ${data.list[i].dt_txt} <br> High: ${data.list[i].main.temp_max} Low: ${data.list[i].main.temp_min} <br> Description: ${data.list[i].weather[0].description}
        </div>`;
    }
}
    document.querySelector("#forecastBtn").addEventListener("click", displayForecast);
    function changeUnits() {
        if (document.querySelector("#metric").onclick) {
        let units = "metric";
        } else if (document.querySelector("#imperial").onclick) {
        let units = "imperial";
    }
}
getLocation();

//jQuery required for modal usage in HTML.
$('#forecastModal').on('shown.bs.modal', function () {
    $('#forecastModalInput').trigger('focus')
  })
//----------------------------------------------------------------------------------------------

        document.querySelector("#metric").addEventListener("click", changeMetric);
        document.querySelector("#imperial").addEventListener("click", changeImperial);

        function changeMetric() {var units = "metric";};
        function changeImperial() {var units = "imperial";};